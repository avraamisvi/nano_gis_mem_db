use super::column::DataType;

pub fn parse_data_type(data_type: sqlparser::ast::DataType) -> DataType {
    return match data_type {
        sqlparser::ast::DataType::String(_) => DataType::STRING,
        sqlparser::ast::DataType::Int(_) => DataType::INT,
        _  => DataType::STRING
        // DataType::Character(_) => todo!(),
        // DataType::Text => todo!(),
        // DataType::Char(_) => todo!(),
        // DataType::CharacterVarying(_) => todo!(),
        // DataType::CharVarying(_) => todo!(),
        // DataType::Varchar(_) => todo!(),
        // DataType::Nvarchar(_) => todo!(),
        // DataType::Uuid => todo!(),
        // DataType::CharacterLargeObject(_) => todo!(),
        // DataType::CharLargeObject(_) => todo!(),
        // DataType::Clob(_) => todo!(),
        // DataType::Binary(_) => todo!(),
        // DataType::Varbinary(_) => todo!(),
        // DataType::Blob(_) => todo!(),
        // DataType::Bytes(_) => todo!(),
        // DataType::Numeric(_) => todo!(),
        // DataType::Decimal(_) => todo!(),
        // DataType::BigNumeric(_) => todo!(),
        // DataType::BigDecimal(_) => todo!(),
        // DataType::Dec(_) => todo!(),
        // DataType::Float(_) => todo!(),
        // DataType::TinyInt(_) => todo!(),
        // DataType::UnsignedTinyInt(_) => todo!(),
        // DataType::Int2(_) => todo!(),
        // DataType::UnsignedInt2(_) => todo!(),
        // DataType::SmallInt(_) => todo!(),
        // DataType::UnsignedSmallInt(_) => todo!(),
        // DataType::MediumInt(_) => todo!(),
        // DataType::UnsignedMediumInt(_) => todo!(),
        // DataType::Int4(_) => todo!(),
        // DataType::Int64 => todo!(),
        // DataType::Integer(_) => todo!(),
        // DataType::UnsignedInt(_) => todo!(),
        // DataType::UnsignedInt4(_) => todo!(),
        // DataType::UnsignedInteger(_) => todo!(),
        // DataType::BigInt(_) => todo!(),
        // DataType::UnsignedBigInt(_) => todo!(),
        // DataType::Int8(_) => todo!(),
        // DataType::UnsignedInt8(_) => todo!(),
        // DataType::Float4 => todo!(),
        // DataType::Float64 => todo!(),
        // DataType::Real => todo!(),
        // DataType::Float8 => todo!(),
        // DataType::Double => todo!(),
        // DataType::DoublePrecision => todo!(),
        // DataType::Bool => todo!(),
        // DataType::Boolean => todo!(),
        // DataType::Date => todo!(),
        // DataType::Time(_, _) => todo!(),
        // DataType::Datetime(_) => todo!(),
        // DataType::Timestamp(_, _) => todo!(),
        // DataType::Interval => todo!(),
        // DataType::JSON => todo!(),
        // DataType::Regclass => todo!(),
        // DataType::Bytea => todo!(),
        // DataType::Custom(_, _) => todo!(),
        // DataType::Array(_) => todo!(),
        // DataType::Enum(_) => todo!(),
        // DataType::Set(_) => todo!(),
        // DataType::Struct(_) => todo!(),
    }
}